{"ast":null,"code":"var _jsxFileName = \"D:\\\\JavaScript\\\\ReactProjects\\\\forumonline\\\\client\\\\src\\\\Pages\\\\Post\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { language, mainUrl } from '../../utils/utils';\nimport axios from 'axios';\nimport ShareComment from './ShareComment';\nimport Comments from '../Comment/Comments';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetails() {\n  _s();\n  const {\n    allPosts\n  } = useSelector(state => state.allPosts);\n  const params = useParams();\n  const {\n    postId\n  } = params;\n  const [postInfo, setPostInfo] = useState({});\n  const [postOwner, setPostOwner] = useState({});\n  const [isShared, setIsShared] = useState(false);\n  const [isDeletedComment, setIsDeletedComment] = useState(false);\n  const [comments, setComments] = useState([]);\n  const month = new Date().getMonth() + 1;\n  const getPostInfo = async () => {\n    const info = await allPosts.filter(post => post._id === postId);\n    setPostInfo(info[0]);\n  };\n  const getUser = async () => {\n    axios.get(`${mainUrl}/api/getUser/${postInfo.OwnerId}`).then(result => {\n      if (result.data.error) {\n        console.log(result.data.message);\n      } else {\n        setPostOwner(result.data.user);\n      }\n    });\n  };\n  const getComments = async () => {\n    axios.get(`${mainUrl}/api/getComments/${postId}`).then(result => {\n      if (result.data.error) {\n        console.log(result.data.message);\n      } else {\n        setComments(result.data.comments);\n      }\n    });\n  };\n  useEffect(() => {\n    if (postId) {\n      getPostInfo();\n      getComments();\n    }\n    return () => {\n      setPostInfo({});\n      setComments([]);\n    };\n  }, []);\n  useEffect(() => {\n    if (postId) {\n      getPostInfo();\n      getComments();\n    }\n    return () => {\n      setPostInfo({});\n      setComments([]);\n    };\n  }, [postId]);\n  useEffect(() => {\n    if (postInfo) {\n      if (postInfo.OwnerId) {\n        getUser();\n      }\n    }\n    return () => {\n      setPostOwner({});\n    };\n  }, [postInfo]);\n  useEffect(() => {\n    if (isShared) {\n      getComments();\n    }\n  }, [isShared]);\n  useEffect(() => {\n    if (isDeletedComment) {\n      getComments();\n    }\n  }, [isDeletedComment]);\n  if (postId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-75 h-auto m-auto d-grid gap-2\",\n      children: postId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this);\n  }\n}\n_s(PostDetails, \"GkIAyZebhfOjV/Ek4F6QUqAhKS8=\", false, function () {\n  return [useSelector, useParams];\n});\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useParams","language","mainUrl","axios","ShareComment","Comments","moment","PostDetails","allPosts","state","params","postId","postInfo","setPostInfo","postOwner","setPostOwner","isShared","setIsShared","isDeletedComment","setIsDeletedComment","comments","setComments","month","Date","getMonth","getPostInfo","info","filter","post","_id","getUser","get","OwnerId","then","result","data","error","console","log","message","user","getComments"],"sources":["D:/JavaScript/ReactProjects/forumonline/client/src/Pages/Post/PostDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { language, mainUrl } from '../../utils/utils';\r\nimport axios from 'axios'\r\nimport ShareComment from './ShareComment';\r\nimport Comments from '../Comment/Comments';\r\nimport moment from 'moment';\r\n\r\nfunction PostDetails() {\r\n\r\n    const { allPosts } = useSelector(state => state.allPosts);\r\n    const params = useParams();\r\n    const { postId } = params;\r\n    const [postInfo, setPostInfo] = useState({});\r\n    const [postOwner, setPostOwner] = useState({});\r\n    const [isShared, setIsShared] = useState(false);\r\n    const [isDeletedComment, setIsDeletedComment] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const month = ((new Date).getMonth() + 1);\r\n\r\n    const getPostInfo = async () => {\r\n        const info = await allPosts.filter(post => post._id === postId);\r\n        setPostInfo(info[0]);\r\n    }\r\n\r\n    const getUser = async () => {\r\n        axios.get(`${mainUrl}/api/getUser/${postInfo.OwnerId}`)\r\n            .then((result) => {\r\n                if (result.data.error) {\r\n                    console.log(result.data.message)\r\n                } else {\r\n                    setPostOwner(result.data.user);\r\n                }\r\n            })\r\n    }\r\n\r\n    const getComments = async () => {\r\n        axios.get(`${mainUrl}/api/getComments/${postId}`).then(result => {\r\n            if (result.data.error) {\r\n                console.log(result.data.message)\r\n            } else {\r\n                setComments(result.data.comments);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (postId) {\r\n            getPostInfo();\r\n            getComments();\r\n        }\r\n\r\n        return () => {\r\n            setPostInfo({});\r\n            setComments([]);\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (postId) {\r\n            getPostInfo();\r\n            getComments();\r\n        }\r\n\r\n        return () => {\r\n            setPostInfo({});\r\n            setComments([]);\r\n        }\r\n    }, [postId]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (postInfo) {\r\n            if (postInfo.OwnerId) {\r\n                getUser();\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            setPostOwner({});\r\n        }\r\n\r\n    }, [postInfo]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isShared) {\r\n            getComments();\r\n        }\r\n\r\n    }, [isShared]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isDeletedComment) {\r\n            getComments();\r\n        }\r\n\r\n    }, [isDeletedComment]);\r\n\r\n\r\n    if (postId) {\r\n                return (\r\n                    <div className='w-75 h-auto m-auto d-grid gap-2'>\r\n                        {postId}\r\n                    </div>\r\n                )\r\n    }\r\n}\r\n\r\nexport default PostDetails"],"mappings":"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"},"metadata":{},"sourceType":"module"}