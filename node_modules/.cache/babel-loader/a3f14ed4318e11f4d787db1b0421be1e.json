{"ast":null,"code":"var _jsxFileName = \"D:\\\\JavaScript\\\\ReactProjects\\\\forumonline\\\\client\\\\src\\\\Pages\\\\Post\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { mainUrl } from '../../utils/utils';\nimport axios from 'axios';\nimport ShareComment from './ShareComment';\nimport Comments from '../Comment/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetails() {\n  _s();\n  const {\n    allPosts\n  } = useSelector(state => state.allPosts);\n  const params = useParams();\n  const {\n    postId\n  } = params;\n  const [postInfo, setPostInfo] = useState({});\n  const [postOwner, setPostOwner] = useState({});\n  const [isShared, setIsShared] = useState(false);\n  const [comments, setComments] = useState([]);\n  const getPostInfo = async () => {\n    const info = allPosts.filter(post => post._id === postId);\n    setPostInfo(info[0]);\n  };\n  const getUser = async () => {\n    axios.get(`${mainUrl}/api/getUser/${postInfo.OwnerId}`).then(result => {\n      if (result.data.error) {\n        console.log(result.data.message);\n      } else {\n        setPostOwner(result.data.user);\n      }\n    });\n  };\n  const getComments = async () => {\n    axios.get(`${mainUrl}/api/getComments/${postId}`).then(result => {\n      if (result.data.error) {\n        console.log(result.data.message);\n      } else {\n        setComments(result.data.comments);\n      }\n    });\n  };\n  useEffect(() => {\n    if (postId) {\n      getPostInfo();\n      getComments();\n      console.log(postId);\n    }\n    return () => {\n      setPostInfo({});\n      setComments([]);\n    };\n  }, [postId]);\n  useEffect(() => {\n    if (postInfo) {\n      getUser();\n    }\n    return () => {\n      setPostOwner({});\n    };\n  }, [postInfo]);\n  useEffect(() => {\n    if (isShared === true) {\n      getComments();\n    }\n  }, [isShared]);\n  if (postId) {\n    if (postInfo) {\n      if (postOwner) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-75 h-auto m-auto d-grid gap-2\",\n          children: postId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n}\n_s(PostDetails, \"2yqvRuNem9kL9OnmlJc6Ctwx5FY=\", false, function () {\n  return [useSelector, useParams];\n});\n_c = PostDetails;\nexport default PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useParams","mainUrl","axios","ShareComment","Comments","PostDetails","allPosts","state","params","postId","postInfo","setPostInfo","postOwner","setPostOwner","isShared","setIsShared","comments","setComments","getPostInfo","info","filter","post","_id","getUser","get","OwnerId","then","result","data","error","console","log","message","user","getComments"],"sources":["D:/JavaScript/ReactProjects/forumonline/client/src/Pages/Post/PostDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { mainUrl } from '../../utils/utils';\r\nimport axios from 'axios'\r\nimport ShareComment from './ShareComment';\r\nimport Comments from '../Comment/Comments';\r\n\r\nfunction PostDetails() {\r\n\r\n    const { allPosts } = useSelector(state => state.allPosts);\r\n    const params = useParams();\r\n    const { postId } = params;\r\n    const [postInfo, setPostInfo] = useState({});\r\n    const [postOwner, setPostOwner] = useState({});\r\n    const [isShared, setIsShared] = useState(false)\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const getPostInfo = async () => {\r\n        const info = allPosts.filter(post => post._id === postId);\r\n        setPostInfo(info[0]);\r\n    }\r\n\r\n    const getUser = async () => {\r\n        axios.get(`${mainUrl}/api/getUser/${postInfo.OwnerId}`)\r\n            .then((result) => {\r\n                if (result.data.error) {\r\n                    console.log(result.data.message)\r\n                } else {\r\n                    setPostOwner(result.data.user);\r\n                }\r\n            })\r\n    }\r\n\r\n    const getComments = async () => {\r\n        axios.get(`${mainUrl}/api/getComments/${postId}`).then(result => {\r\n            if (result.data.error) {\r\n                console.log(result.data.message)\r\n            } else {\r\n                setComments(result.data.comments);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (postId) {\r\n            getPostInfo();\r\n            getComments();\r\n            console.log(postId)\r\n        }\r\n\r\n        return () => {\r\n            setPostInfo({});\r\n            setComments([]);\r\n        }\r\n    }, [postId]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (postInfo) {\r\n            getUser();\r\n        }\r\n\r\n        return () => {\r\n            setPostOwner({});\r\n        }\r\n    }, [postInfo]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isShared === true) {\r\n            getComments();\r\n        }\r\n\r\n    }, [isShared]);\r\n\r\n\r\n    if (postId) {\r\n        if (postInfo) {\r\n            if (postOwner) {\r\n                return (\r\n                    <div className='w-75 h-auto m-auto d-grid gap-2'>\r\n                        {postId}\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostDetails"],"mappings":"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"},"metadata":{},"sourceType":"module"}