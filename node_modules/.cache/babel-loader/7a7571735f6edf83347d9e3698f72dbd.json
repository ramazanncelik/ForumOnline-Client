{"ast":null,"code":"import { object, string, ref } from 'yup';\nimport { language } from './utils';\nexport const registerValidations = object({\n  email: string().required(language.includes(\"tr\") ? 'E-mail Adresi Boş Geçilemez' : 'E-mail Adress Cannot be blank').email(language.includes(\"tr\") ? 'Geçerli bir e-mail adresi giriniz!' : 'Please enter a valid e-mail address!'),\n  nickName: string().required(language.includes(\"tr\") ? 'Kullanıcı Adı Boş Geçilemez!' : 'Nick Name Cannot be blank!').min(1, _ref => {\n    let {\n      min\n    } = _ref;\n    return language.includes(\"tr\") ? 'Kullanıcı Adı en az ' + min + ' karakterden oluşmalıdır!' : 'Nick Name must be at least' + min + 'characters!';\n  }).max(50, _ref2 => {\n    let {\n      max\n    } = _ref2;\n    return language.includes(\"tr\") ? 'Kullanıcı Adı en fazla ' + max + ' karakterden oluşmalıdır!' : 'Username must be a maximum of ' + max + ' characters!';\n  }),\n  password: string().required(language.includes(\"tr\") ? 'Şifre Boş Geçilemez!' : 'Password Cannot be blank!').min(6, _ref3 => {\n    let {\n      min\n    } = _ref3;\n    return language.includes(\"tr\") ? 'Şifre en az ' + min + ' karakterden oluşmalıdır!' : 'Password must be at least' + min + 'characters!';\n  })\n});\nexport const loginValidations = object({\n  email: string().required(language.includes(\"tr\") ? 'E-mail Adresi Boş Geçilemez' : 'E-mail Adress Cannot be blank').email(language.includes(\"tr\") ? 'Geçerli bir e-mail adresi giriniz!' : 'Please enter a valid e-mail address!'),\n  password: string().required(language.includes(\"tr\") ? 'Şifre Boş Geçilemez!' : 'Password Cannot be blank!').min(6, _ref4 => {\n    let {\n      min\n    } = _ref4;\n    return language.includes(\"tr\") ? 'Şifre en az ' + min + ' karakterden oluşmalıdır!' : 'Password must be at least' + min + 'characters!';\n  })\n});\nexport const getEmailValidations = object({\n  email: string().required(language.includes(\"tr\") ? 'E-mail Adresi Boş Geçilemez' : 'E-mail Adress Cannot be blank').email(language.includes(\"tr\") ? 'Geçerli bir e-mail adresi giriniz!' : 'Please enter a valid e-mail address!')\n});\nexport const resetPasswordValidations = object({\n  password: string().required(language.includes(\"tr\") ? 'Şifre Boş Geçilemez!' : 'Password Cannot be blank!').min(6, _ref5 => {\n    let {\n      min\n    } = _ref5;\n    return language.includes(\"tr\") ? 'Şifre en az ' + min + ' karakterden oluşmalıdır!' : 'Password must be at least' + min + 'characters!';\n  }),\n  passwordConfirm: string().oneOf([ref(\"password\")]).required(language.includes(\"tr\") ? 'Boş Geçilemez!' : 'Cannot be blank!')\n});\nexport const publishPostValidations = object({\n  subject: string().required(language.includes(\"tr\") ? 'Konu Boş Geçilemez!' : 'Subject Cannot be blank!').min(2, _ref6 => {\n    let {\n      min\n    } = _ref6;\n    return language.includes(\"tr\") ? \"Lütfen Bir Konu Seçiniz...\" : \"Please Select a Subject...\";\n  }),\n  title: string().required(language.includes(\"tr\") ? 'Başlık Boş Geçilemez!' : 'Title Cannot be blank!').min(1, _ref7 => {\n    let {\n      min\n    } = _ref7;\n    return language.includes(\"tr\") ? 'Başlık en az ' + min + ' karakterden oluşmalıdır!' : 'Title must be at least' + min + 'characters!';\n  }).max(150, _ref8 => {\n    let {\n      max\n    } = _ref8;\n    return language.includes(\"tr\") ? 'Başlık en fazla ' + max + ' karakterden oluşmalıdır!' : 'Title must be a maximum of ' + max + ' characters!';\n  }),\n  text: string().required(language.includes(\"tr\") ? 'Metin Boş Geçilemez!' : 'Text Cannot be blank!').min(1, _ref9 => {\n    let {\n      min\n    } = _ref9;\n    return language.includes(\"tr\") ? 'Metin en az ' + min + ' karakterden oluşmalıdır!' : 'Text must be at least' + min + 'characters!';\n  }).max(2500, _ref10 => {\n    let {\n      max\n    } = _ref10;\n    return language.includes(\"tr\") ? 'Metin en fazla ' + max + ' karakterden oluşmalıdır!' : 'Text must be a maximum of ' + max + ' characters!';\n  })\n});\nexport const reportValidations = object({\n  title: string().required(language.includes(\"tr\") ? 'Başlık Boş Geçilemez!' : 'Title Cannot be blank!').min(2, _ref11 => {\n    let {\n      min\n    } = _ref11;\n    return language.includes(\"tr\") ? \"Lütfen Bir Başlık Seçiniz...\" : \"Please Select a Title...\";\n  }),\n  detail: string().required(language.includes(\"tr\") ? 'Detay Boş Geçilemez!' : 'Detail Cannot be blank!').min(1, _ref12 => {\n    let {\n      min\n    } = _ref12;\n    return language.includes(\"tr\") ? 'Detay en az ' + min + ' karakterden oluşmalıdır!' : 'Detail must be at least' + min + 'characters!';\n  }).max(2000, _ref13 => {\n    let {\n      max\n    } = _ref13;\n    return language.includes(\"tr\") ? 'Detay en fazla ' + max + ' karakterden oluşmalıdır!' : 'Detail must be a maximum of ' + max + ' characters!';\n  })\n});","map":{"version":3,"names":["object","string","ref","language","registerValidations","email","required","includes","nickName","min","max","password","loginValidations","getEmailValidations","resetPasswordValidations","passwordConfirm","oneOf","publishPostValidations","subject","title","text","reportValidations","detail"],"sources":["D:/JavaScript/ReactProjects/forumonline/client/src/utils/validations.js"],"sourcesContent":["import { object, string,ref } from 'yup';\r\nimport { language } from './utils';\r\n\r\n\r\nexport const registerValidations = object({\r\n\r\n    email: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'E-mail Adresi Boş Geçilemez'\r\n            :\r\n            'E-mail Adress Cannot be blank')\r\n        .email(language.includes(\"tr\") ?\r\n            'Geçerli bir e-mail adresi giriniz!'\r\n            :\r\n            'Please enter a valid e-mail address!'),\r\n    nickName: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Kullanıcı Adı Boş Geçilemez!'\r\n            :\r\n            'Nick Name Cannot be blank!')\r\n        .min(1, ({ min }) => language.includes(\"tr\") ?\r\n            'Kullanıcı Adı en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Nick Name must be at least' + min + 'characters!')\r\n        .max(50, ({ max }) => language.includes(\"tr\") ?\r\n            'Kullanıcı Adı en fazla ' + max + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Username must be a maximum of ' + max + ' characters!'),\r\n    password: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Şifre Boş Geçilemez!'\r\n            :\r\n            'Password Cannot be blank!')\r\n        .min(6, ({ min }) => language.includes(\"tr\") ?\r\n            'Şifre en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Password must be at least' + min + 'characters!'),\r\n});\r\n\r\nexport const loginValidations = object({\r\n\r\n    email: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'E-mail Adresi Boş Geçilemez'\r\n            :\r\n            'E-mail Adress Cannot be blank')\r\n        .email(language.includes(\"tr\") ?\r\n            'Geçerli bir e-mail adresi giriniz!'\r\n            :\r\n            'Please enter a valid e-mail address!'),\r\n    password: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Şifre Boş Geçilemez!'\r\n            :\r\n            'Password Cannot be blank!')\r\n        .min(6, ({ min }) => language.includes(\"tr\") ?\r\n            'Şifre en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Password must be at least' + min + 'characters!'),\r\n});\r\n\r\nexport const getEmailValidations = object({\r\n\r\n    email: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'E-mail Adresi Boş Geçilemez'\r\n            :\r\n            'E-mail Adress Cannot be blank')\r\n        .email(language.includes(\"tr\") ?\r\n            'Geçerli bir e-mail adresi giriniz!'\r\n            :\r\n            'Please enter a valid e-mail address!'),\r\n    \r\n});\r\n\r\nexport const resetPasswordValidations = object({\r\n\r\n    password: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Şifre Boş Geçilemez!'\r\n            :\r\n            'Password Cannot be blank!')\r\n        .min(6, ({ min }) => language.includes(\"tr\") ?\r\n            'Şifre en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Password must be at least' + min + 'characters!'),\r\n    passwordConfirm: string()\r\n        .oneOf([ref(\"password\")])\r\n        .required(language.includes(\"tr\") ?\r\n            'Boş Geçilemez!'\r\n            :\r\n            'Cannot be blank!'),\r\n});\r\n\r\nexport const publishPostValidations = object({\r\n\r\n    subject: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Konu Boş Geçilemez!'\r\n            :\r\n            'Subject Cannot be blank!')\r\n        .min(2, ({ min }) => language.includes(\"tr\") ? \"Lütfen Bir Konu Seçiniz...\" : \"Please Select a Subject...\"),\r\n    title: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Başlık Boş Geçilemez!'\r\n            :\r\n            'Title Cannot be blank!')\r\n        .min(1, ({ min }) => language.includes(\"tr\") ?\r\n            'Başlık en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Title must be at least' + min + 'characters!')\r\n        .max(150, ({ max }) => language.includes(\"tr\") ?\r\n            'Başlık en fazla ' + max + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Title must be a maximum of ' + max + ' characters!'),\r\n    text: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Metin Boş Geçilemez!'\r\n            :\r\n            'Text Cannot be blank!')\r\n        .min(1, ({ min }) => language.includes(\"tr\") ?\r\n            'Metin en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Text must be at least' + min + 'characters!')\r\n        .max(2500, ({ max }) => language.includes(\"tr\") ?\r\n            'Metin en fazla ' + max + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Text must be a maximum of ' + max + ' characters!'),\r\n\r\n});\r\n\r\nexport const reportValidations = object({\r\n\r\n    title: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Başlık Boş Geçilemez!'\r\n            :\r\n            'Title Cannot be blank!')\r\n        .min(2, ({ min }) => language.includes(\"tr\") ? \"Lütfen Bir Başlık Seçiniz...\" : \"Please Select a Title...\"),\r\n    detail: string()\r\n        .required(language.includes(\"tr\") ?\r\n            'Detay Boş Geçilemez!'\r\n            :\r\n            'Detail Cannot be blank!')\r\n        .min(1, ({ min }) => language.includes(\"tr\") ?\r\n            'Detay en az ' + min + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Detail must be at least' + min + 'characters!')\r\n        .max(2000, ({ max }) => language.includes(\"tr\") ?\r\n            'Detay en fazla ' + max + ' karakterden oluşmalıdır!'\r\n            :\r\n            'Detail must be a maximum of ' + max + ' characters!'),\r\n\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}